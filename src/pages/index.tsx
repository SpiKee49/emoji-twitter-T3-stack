import { type RouterOutputs, api } from "~/utils/api";
import { SignInButton, useUser } from "@clerk/nextjs";

import Head from "next/head";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";
dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();
  console.log(user);
  if (!user) return null;
  return (
    <div className="flex w-full gap-5">
      <Image
        src={user.profileImageUrl}
        alt="Profile image"
        className="h-10 w-10 rounded-full"
        width={40}
        height={40}
      />
      <input
        placeholder="Type some emojis!"
        className="w-full bg-transparent"
      />
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div key={post.id} className="flex gap-5 border-b border-slate-700 p-4">
      <Image
        src={author?.profilePic}
        alt="Profile image"
        className="h-10 w-10 rounded-full"
        width={40}
        height={40}
      />
      <div className="flex flex-col">
        <div className="flex text-xs font-bold text-slate-600">
          <span>{`@${author?.username} Â· ${dayjs(
            post.createdAt
          ).fromNow()}`}</span>
        </div>
        <div className="flex">
          <span>{post.content}</span>
        </div>
      </div>
    </div>
  );
};

export default function Home() {
  const { data, isLoading } = api.posts.getAll.useQuery();
  const user = useUser();

  if (isLoading) return <div>Loading...</div>;
  if (!data) return <div>Something went wrong. No data found.</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-x border-slate-300 md:max-w-2xl">
          <div className="flex border-b border-slate-500 p-4 ">
            {!user.isSignedIn && (
              <div className="flex justify-center">
                <SignInButton>
                  <button className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20">
                    Sign In
                  </button>
                </SignInButton>
              </div>
            )}
            {user.isSignedIn && <CreatePostWizard />}
          </div>

          <div>
            {data.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
}
